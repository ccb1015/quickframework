//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由模板自动生成 - 2016-01-19 11:56:15
//     对此文件的更改可能会导致不正确的行为，并且如果 重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
package com.bonc.quickframework.web.action;

import java.util.List;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.bonc.quickframework.entity.GeneratorServiceMethod;
import com.bonc.quickframework.factory.serviceContext;
import com.bonc.quickframework.service.IGeneratorServiceService;
import com.bonc.quickframework.web.action.original.AbstractGeneratorServiceMethodAction;
import com.opensymphony.xwork2.ActionContext;

import java.util.*;

import javax.annotation.Resource;

/**
 * @author dguanlin email:dguanlin(a)163.com
 * @version 1.0
 * @since 1.0
 */
 
@Controller(value = "generatorServiceMethodAction")
@Scope(value = "prototype")
public class GeneratorServiceMethodAction extends AbstractGeneratorServiceMethodAction {
	
	@Resource(name="generatorServiceService")
	IGeneratorServiceService generatorServiceService;
	
	@Override
	public String list() {
		Long serviceId = this.getBean().getGeneratorServiceMethod().getServiceId();
		if (serviceId != null && serviceId != 0) {
			this.getBean().getPageInfo().getQuerys()
					.put("serviceId", serviceId);
		}
		return super.list();
	}
	
	@Override
	public String add() {
		this.findServices();
		ActionContext.getContext().put("dataTypes", new serviceContext().getGeneratorDataTypeService().loadAll());
		return super.add();
	};

	@Override
	public String edit() {
		this.findServices();
		ActionContext.getContext().put("dataTypes", new serviceContext().getGeneratorDataTypeService().loadAll());
		return super.edit();
	}

	private void findServices(){
		ActionContext.getContext().put("generatorServices", generatorServiceService.loadAll());
	}

}
