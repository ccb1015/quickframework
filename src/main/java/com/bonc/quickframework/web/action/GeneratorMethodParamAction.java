//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由模板自动生成 - 2016-01-19 11:56:16
//     对此文件的更改可能会导致不正确的行为，并且如果 重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
package com.bonc.quickframework.web.action;

import javax.annotation.Resource;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.bonc.quickframework.entity.GeneratorMethodParam;
import com.bonc.quickframework.entity.GeneratorProject;
import com.bonc.quickframework.entity.GeneratorServiceMethod;
import com.bonc.quickframework.factory.serviceContext;
import com.bonc.quickframework.service.IGeneratorServiceMethodService;
import com.bonc.quickframework.web.action.original.AbstractGeneratorMethodParamAction;
import com.opensymphony.xwork2.ActionContext;

/**
 * @author dguanlin email:dguanlin(a)163.com
 * @version 1.0
 * @since 1.0
 */
 
@Controller(value = "generatorMethodParamAction")
@Scope(value = "prototype")
public class GeneratorMethodParamAction extends AbstractGeneratorMethodParamAction {

	@Resource(name="generatorServiceMethodService")
	IGeneratorServiceMethodService generatorServiceMethodService;
	
	@Override
	public String list() {
		Long methodId = this.getBean().getGeneratorMethodParam().getMethodId();
		if (methodId != null && methodId != 0) {
			this.getBean().getPageInfo().getQuerys()
					.put("methodId", methodId);
		}
		return super.list();
	}
	
	@Override
	public String add() {
		this.findMethods();
		this.findEntitys();
		return super.add();
	};

	@Override
	public String edit() {
		this.findMethods();
		this.findEntitys();
		return super.edit();
	}

	private void findMethods(){
		ActionContext.getContext().put("generatorServiceMethods", generatorServiceMethodService.loadAll());
	}
	private void findEntitys(){
	/*	Long entityId = this.getBean().getGeneratorMethodParam().getId();
		GeneratorServiceMethod method=null;
		if(entityId!=null&&entityId!=0){
			GeneratorMethodParam param = this.generatorMethodParamService.findById(entityId);
			if(param!=null)method=param.getGeneratorServiceMethod();
		}else{
			Long methodId = this.getBean().getGeneratorMethodParam().getMethodId();
			if(methodId!=null&&methodId!=0){
				method=new serviceContext().getGeneratorServiceMethodService().findById(methodId);
			}
		}*/
		GeneratorServiceMethod method=null;
		Long methodId = this.getBean().getGeneratorMethodParam().getMethodId();
		if(methodId!=null&&methodId!=0){
			method=new serviceContext().getGeneratorServiceMethodService().findById(methodId);
		}
		GeneratorProject project = method==null?null:method.getGeneratorService().getGeneratorProject();
		if (project != null) {
			ActionContext.getContext().put("generatorEntitys", project.getGeneratorEntitys());
		}else{
			ActionContext.getContext().put("generatorEntitys", new serviceContext().getGeneratorEntityService().loadAll());
		}
	}

}
